<?
if($INCLUDE_FROM_CACHE!='Y')return false;
$datecreate = '001475134064';
$dateexpire = '001475137664';
$ser_content = 'a:2:{s:7:"CONTENT";s:0:"";s:4:"VARS";a:2:{s:8:"arResult";a:2:{s:5:"ITEMS";a:2:{i:0;a:12:{s:2:"ID";s:3:"328";s:4:"NAME";s:86:"Как организовано управление правами в системе?";s:9:"IBLOCK_ID";s:2:"11";s:17:"IBLOCK_SECTION_ID";s:2:"87";s:17:"PREVIEW_TEXT_TYPE";s:4:"html";s:12:"PREVIEW_TEXT";s:2150:"В системе &quot;Битрикс: Управление сайтом&quot; поддерживается два уровня разграничения прав доступа:
<br />
1) <b>доступ непосредственно на файлы</b>
<br />
2) <b>права в рамках логики того или иного модуля</b>
<br />
Сначала система проверяет доступ 1-го уровня, затем при необходимости проверяется право доступа 2-го уровня.
<br />
Для 1-го уровня доступа используются следующие варианты:
<br />
- запрещен (при обращении к файлу доступ будет всегда запрещен)
<br />
- чтение (при обращении к файлу доступ будет разрешен)
<br />
- документооборот (файл может быть отредактирован в режиме документооборота)
<br />
- запись (файл может быть отредактирован непосредственно)
<br />
Данный уровень доступа задается в меню &quot;Структура сайта&quot; -&gt; &quot;Управление&quot;.
<br />
Если пользователь обладает несколькими уровнями доступа на файл, то выбирается максимальный.
<br />
Если речь идет об обычных статичных публичных страницах, то к ним применяется только 1-ый уровень доступа.
<br />
Если пользователь имеет как минимум право &quot;Чтение&quot; на файл (1-ый уровень доступа) и если данный файл является функциональной частью того или иного модуля, то проверяются права доступа 2-го уровня, которые задаются в настройках модуля.
<br />";s:16:"DETAIL_TEXT_TYPE";s:4:"text";s:11:"DETAIL_TEXT";N;s:10:"CREATED_BY";s:1:"1";s:4:"SORT";s:3:"500";s:9:"EDIT_LINK";N;s:11:"DELETE_LINK";N;}i:1;a:12:{s:2:"ID";s:3:"320";s:4:"NAME";s:64:"Как настроить обработчик 404 ошибки?";s:9:"IBLOCK_ID";s:2:"11";s:17:"IBLOCK_SECTION_ID";s:2:"87";s:17:"PREVIEW_TEXT_TYPE";s:4:"html";s:12:"PREVIEW_TEXT";s:892:"
<p>Если у вас PHP установлен как CGI добавьте в корне сайта в файл .htaccess следующие строки:
  <br />
<code>&nbsp;&nbsp;&nbsp; RewriteEngine On
    <br />
  &nbsp;&nbsp;&nbsp; RewriteBase /
    <br />
  &nbsp;&nbsp;&nbsp; RewriteCond %{REQUEST_FILENAME} !-f
    <br />
  &nbsp;&nbsp;&nbsp; RewriteRule ^[0-9a-zA-Z_/.-]+.php$ /404.php
    <br />
  &nbsp;&nbsp;&nbsp; ErrorDocument 404 /404.php
    <br />
  </code>Для PHP установленном как ISAPI в .htaccess достаточно добавить строку:
  <br />
<code>&nbsp;&nbsp;&nbsp; ErrorDocument 404 /404.php
    <br />
  </code>После этого создайте в корне сайта файл 404.php (если его нет), который и будет являться обработчиком 404 ошибки.</p>

<p>
  <br />
</p>
";s:16:"DETAIL_TEXT_TYPE";s:4:"text";s:11:"DETAIL_TEXT";N;s:10:"CREATED_BY";s:1:"1";s:4:"SORT";s:3:"500";s:9:"EDIT_LINK";N;s:11:"DELETE_LINK";N;}}s:8:"ITEMS_ID";a:2:{i:0;s:3:"328";i:1;s:3:"320";}}s:18:"templateCachedData";a:0:{}}}';
return true;
?>